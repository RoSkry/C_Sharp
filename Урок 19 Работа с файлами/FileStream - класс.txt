FileStream - конструктор
/////////////////////////////////

Список перегрузки
  	Имя	Описание
	FileStream(SafeFileHandle, FileAccess)	Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись. 
	FileStream(IntPtr, FileAccess)	Устаревшее. Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись.
	FileStream(String, FileMode)	Инициализирует новый экземпляр класса FileStream с указанным путем и режимом создания.
	FileStream(SafeFileHandle, FileAccess, Int32)	Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись и размером буфера.
	FileStream(IntPtr, FileAccess, Boolean)	Устаревшее. Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись и владельцем экземпляра FileStream.
	FileStream(String, FileMode, FileAccess)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания и разрешением на чтение и запись.
	FileStream(SafeFileHandle, FileAccess, Int32, Boolean)	Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись, размером буфера и синхронным или асинхронным состоянием.
	FileStream(IntPtr, FileAccess, Boolean, Int32)	Устаревшее. Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись, владельцем экземпляра FileStream и размером буфера.
	FileStream(String, FileMode, FileAccess, FileShare)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, разрешением на чтение и запись и разрешением на совместное использование.
	FileStream(IntPtr, FileAccess, Boolean, Int32, Boolean)	Устаревшее. Инициализирует новый экземпляр класса FileStream для заданного дескриптора файла с заданными разрешениями на чтение и запись, владельцем экземпляра FileStream, размером буфера и синхронным или асинхронным состоянием.
	FileStream(String, FileMode, FileAccess, FileShare, Int32)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, разрешениями на чтение и запись и на совместное использование, а также размером буфера.
	FileStream(String, FileMode, FileAccess, FileShare, Int32, Boolean)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, разрешениями на чтение и запись и совместное использование, размером буфера и синхронным или асинхронным состоянием.
	FileStream(String, FileMode, FileAccess, FileShare, Int32, FileOptions)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, разрешениями на чтение, запись и совместное использование, доступом для других FileStreams к этому же файлу, размером буфера и дополнительными параметрами файла.
	FileStream(String, FileMode, FileSystemRights, FileShare, Int32, FileOptions)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, разрешениями на чтение, запись и совместное использование, размером буфера и дополнительными параметрами файла.
	FileStream(String, FileMode, FileSystemRights, FileShare, Int32, FileOptions, FileSecurity)	Инициализирует новый экземпляр класса FileStream с заданными путем, режимом создания, правами на доступ и совместное использование, размером буфера, дополнительными параметрами файла, управлением доступом и аудитом безопасности.
///////////////////////////////////

Методы

//////////////////////////////////
  	Имя	Описание
	BeginRead	Перегружен. 
	BeginWrite	Перегружен. 
	Close	Перегружен. 
	CreateObjRef	Создает объект, который содержит всю необходимую информацию для создания прокси-сервера, используемого для взаимодействия с удаленным объектом. (Унаследовано от MarshalByRefObject.)
	CreateWaitHandle	Устаревшее. Размещает объект WaitHandle. (Унаследовано от Stream.)
	Dispose	Перегружен. 
	EndRead	Перегружен. 
	EndWrite	Перегружен. 
	Equals	Определяет, равен ли заданный объект Object текущему объекту Object. (Унаследовано от Object.)
	Finalize	Гарантирует, что ресурсы освобождены и выполнены другие завершающие операции, когда сборщик мусора восстанавливает FileStream. (Переопределяет Object.Finalize.)
	Flush	Очищает все буферы для этого потока и вызывает запись всех буферизованных данных в файловую систему. (Переопределяет Stream.Flush.)
	GetAccessControl	Получает объект FileSecurity, который инкапсулирует записи списка управления доступом (ACL) для файла, описываемого текущим объектом FileStream.
	GetHashCode	Играет роль хэш-функции для определенного типа. (Унаследовано от Object.)
	GetLifetimeService	Извлекает объект обслуживания во время существования, который управляет политикой времени существования данного экземпляра. (Унаследовано от MarshalByRefObject.)
	GetType	Возвращает объект Type для текущего экземпляра. (Унаследовано от Object.)
	InitializeLifetimeService	Возвращает объект обслуживания во время существования для управления политикой времени существования данного экземпляра. (Унаследовано от MarshalByRefObject.)
	Lock	Предотвращает изменение FileStream другими процессами, пока разрешен доступ для чтения.
	MemberwiseClone	Перегружен. 
	Read	Выполняет чтение блока байтов из потока и запись данных в заданный буфер. (Переопределяет Stream.Read(Byte(), Int32, Int32).)
	ReadByte	Считывает байт из файла и перемещает положение чтения на один байт. (Переопределяет Stream.ReadByte.)
	Seek	Устанавливает текущее положение этого потока на заданное значение. (Переопределяет Stream.Seek(Int64, SeekOrigin).)
	SetAccessControl	Применяет записи списка управления доступом (ACL), описанные объектом FileSecurity, к файлу, который описывается текущим объектом FileStream.
	SetLength	Устанавливает длину этого потока на заданное значение. (Переопределяет Stream.SetLength(Int64).)
	ToString	Возвращает объект String, который представляет текущий объект Object. (Унаследовано от Object.)
	Unlock	Разрешает доступ других процессов ко всему ранее заблокированному файлу или его части.
	Write	Записывает блок байтов в данный поток с использованием данных из буфера. (Переопределяет Stream.Write(Byte(), Int32, Int32).)
	WriteByte	Запись байта в текущую позицию в потоке файла. (Переопределяет Stream.WriteByte(Byte).)
//////////////////////////////////////////


Свойства

/////////////////////////////////////////
  	Имя	Описание
	CanRead	Получает значение, определяющее в текущем потоке наличие поддержки операций чтения. (Переопределяет Stream.CanRead.)
	CanSeek	Получает значение, определяющее в текущем потоке наличие поддержки операций поиска. (Переопределяет Stream.CanSeek.)
	CanTimeout	Получает значение, которое показывает, может ли для данного потока истечь время ожидания. (Унаследовано от Stream.)
	CanWrite	Получает значение, определяющее в текущем потоке наличие поддержки операций записи. (Переопределяет Stream.CanWrite.)
	Handle	Устаревшее. Возвращает дескриптор файла операционной системы для файла, инкапсулируемого текущим объектом FileStream.
	IsAsync	Получает значение, определяющее, как был открыт FileStream — синхронно или асинхронно.
	Length	Получает длину потока в байтах. (Переопределяет Stream.Length.)
	Name	Получает передаваемое в конструктор имя FileStream.
	Position	Получает или задает текущую позицию этого потока. (Переопределяет Stream.Position.)
	ReadTimeout	Получает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию чтения, прежде чем истечет время ожидания. (Унаследовано от Stream.)
	SafeFileHandle	Получает объект SafeFileHandle, который представляет дескриптор файла операционной системы для файла, инкапсулируемого текущим объектом FileStream.
	WriteTimeout	Получает или задает значение в миллисекундах, определяющее период, в течение которого поток будет пытаться выполнить операцию записи, прежде чем истечет время ожидания. (Унаследовано от Stream.)






Пример: варианты создания объекта FileStream - вызов перегруженных конструкторов

==================


// создает файл с доступом на чтение-запись и позволяет другим
// потокам читать его
FileStream fs = new FileStream(@"D:\Project.doc", FileMode.Create);
// то же самое, но файл открывается только для записи
FileStream fs2 = new FileStream (@"D:\Project2.doc", FileMode.Create, 
                                 FileAccess.Write);
// то же самое, но другим потокам доступ к файлу запрещен, пока открыт fs3
FileStream fs3 = new FileStream (@"D:\Project3.doc",FileMode.Create,
                                 FileAccess.Write, FileShare.None);


Пример: варианты создания объекта FileStream – использование методов FileInfo
======================

    FileInfo myFile4 = new FileInfo(@"D:\Project4. doc");
    //открывает только для чтения
    FileStream fs4 = myFile4.OpenRead();

    FileInfo myFile5 = new FileInfo(@"D:\Project5.doc");
    //открывает только для записи
    FileStream fs5 = myFile5.OpenWrite();

    FileInfo myFile6 = new FileInfo(@"D:\Project6.doc");
    //явно задается параметры режима, доступа и совместного использования 
    FileStream fs6 = myFile6.Open(FileMode.Append, FileAccess.Write, FileShare.None);

    FileInfo myFile7 = new FileInfo(@"C:\C# Projects\Project7 .doc");
    //создает новй файл
    FileStream fs7 = myFile7.Create();

