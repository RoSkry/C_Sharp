String - класс

Представляет текст как последовательность знаков Юникода.

Иерархия наследования
System.Object 
  System.String
Пространство имен:  System

		Конструкторы

 String(Char*)	Инициализирует новый экземпляр класса String значением, на которое указывает заданный указатель на массив знаков Юникода.
 String(Char[])	Инициализирует новый экземпляр класса String значением, заданным в виде массива знаков Юникода.
 String(SByte*)	Инициализирует новый экземпляр класса String значением, определенным указателем на массив 8-разрядных целых чисел со знаком.
 String(Char, Int32)	Инициализирует новый экземпляр класса String значением, полученным путем повторения заданного знака Юникода заданное число раз.
 String(Char*, Int32, Int32)	Инициализирует новый экземпляр класса String значением, которое определяется заданным указателем на массив знаков Юникода, начальной позицией знака в этом массиве и длиной.
 String(Char[], Int32, Int32)	Инициализирует новый экземпляр класса String значением, заданным массивом знаков Юникода, начальной позицией знака в пределах данного массива и длиной.
 String(SByte*, Int32, Int32)	Инициализирует новый экземпляр класса String значением, определяемым заданным указателем на массив 8-битовых целых чисел со знаком, позицией начальной в пределах данного массива и длиной.
 String(SByte*, Int32, Int32, Encoding)	Инициализирует новый экземпляр класса String значением, определенным заданным указателем на массив 8-разрядных целых чисел со знаком, начальной позицией в пределах данного массива, длиной и объектом Encoding.

		Свойства

 Chars	Получает объект Char в указанной позиции в текущем объекте String.
 Length	Возвращает число знаков в текущем объекте String.

		Методы

 Clone	Возвращает ссылку на данный экземпляр класса String.
 Compare(String, String)	Сравнивает два указанных объекта String и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, String, Boolean)	Сравнивает два заданных объекта String (с учетом или без учета регистра) и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, String, StringComparison)	Сравнивает два указанных объекта String с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, String, Boolean, CultureInfo)	Сравнивает два заданных объекта String (с учетом или без учета регистра), используя сведения о языке и региональных параметрах, и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, String, CultureInfo, CompareOptions)	Сравнивает два заданных объекта String, используя указанные параметры сравнения и сведения о языке и региональных параметрах, которые влияют на сравнение, и возвращает целое число, показывающее связь между двумя строками в порядке сортировки.
 Compare(String, Int32, String, Int32, Int32)	Сравнивает подстроки двух указанных объектов String и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, Int32, String, Int32, Int32, Boolean)	Сравнивает подстроки двух заданных объектов String (с учетом или без учета регистра) и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, Int32, String, Int32, Int32, StringComparison)	Сравнивает подстроки двух указанных объектов String с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, Int32, String, Int32, Int32, Boolean, CultureInfo)	Сравнивает подстроки двух заданных объектов String (с учетом или без учета регистра), используя сведения о языке и региональных параметрах, и возвращает целое число, которое показывает их относительное положение в порядке сортировки.
 Compare(String, Int32, String, Int32, Int32, CultureInfo, CompareOptions)	Сравнивает подстроки двух заданных объектов String, используя указанные параметры сравнения и сведения о языке и региональных параметрах, которые влияют на сравнение, и возвращает целое число, показывающее связь между двумя подстроками в порядке сортировки.
 CompareOrdinal(String, String)	Сравнивает два заданных объекта String, оценивая числовые значения соответствующих объектов Char в каждой строке.
 CompareOrdinal(String, Int32, String, Int32, Int32)	Сравнивает подстроки двух заданных объектов String, вычисляя числовые значения соответствующих объектов Char в каждой подстроке.
 CompareTo(Object)	Сравнивает данный экземпляр с заданным объектом Object и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект Object.
 CompareTo(String)	Сравнивает данный экземпляр с заданным объектом String и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект String.
 Concat(Object)	Создает строковое представление указанного объекта.
 Concat(Object[])	Сцепляет строковые представления элементов указанного массива Object.
 Concat(IEnumerable<String>)	Сцепляет элементы созданной коллекции IEnumerable<T> типа String.
 Concat(String[])	Сцепляет элементы указанного массива String.
 Concat(Object, Object)	Сцепляет строковые представления двух указанных объектов.
 Concat(String, String)	Сцепляет два указанных экземпляра String.
 Concat(Object, Object, Object)	Сцепляет строковые представления трех указанных объектов.
 Concat(String, String, String)	Сцепляет три указанных экземпляра String.
 Concat(Object, Object, Object, Object)	Сцепляет строковые представления четырех указанных объектов и любые объекты, заданные в необязательном списке параметров переменной длины.
 Concat(String, String, String, String)	Сцепляет четыре указанных экземпляра String.
 Concat<T>(IEnumerable<T>)	Сцепляет элементы реализации IEnumerable<T>.
 Contains	Возвращает значение, указывающее, содержит ли указанная строка значение подстроки переданной в качестве параметра.
 Copy	Создает новый экземпляр String, имеющий то же значение, что и заданный экземпляр String.
 CopyTo	Копирует указанное число символов начиная с указанной позиции в данном экземпляре в указанную позицию массива символов Юникода.
 EndsWith(String)	Определяет, совпадает ли конец данного экземпляра строки с указанной строкой.
 EndsWith(String, StringComparison)	Определяет, совпадает ли конец экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.
 EndsWith(String, Boolean, CultureInfo)	Определяет, совпадает ли конец данного экземпляра строки с заданной строкой при сравнении с учетом заданного языка и региональных параметров.
 Equals(Object)	Определяет, равны ли значения этого экземпляра и указанного объекта, который также должен быть объектом String. (Переопределяет Object.Equals(Object).)
 Equals(String)	Определяет равны ли значения этого экземпляра и указанного объекта String.
 Equals(String, String)	Определяет, равны ли значения двух указанных объектов String.
 Equals(String, StringComparison)	Определяет, равны ли значения этой строки и указанного объекта String. Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.
 Equals(String, String, StringComparison)	Определяет, равны ли значения двух указанных объектов String. Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.
 Format(String, Object)	Заменяет один или более элементов формата в указанной строке строковым представлением указанного объекта.
 Format(String, Object[])	Заменяет элемент формата в указанной строке строковым представлением соответствующего объекта в указанном массиве.
 Format(IFormatProvider, String, Object[])	Заменяет элементы формата в указанной строке строковым представлениями соответствующих объектов в указанном массиве. Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.
 Format(String, Object, Object)	Заменяет элементы формата в указанной строке строковым представлением двух указанных объектов.
 Format(String, Object, Object, Object)	Заменяет элементы формата в указанной строке строковым представлением трех указанных объектов.
 GetEnumerator	Извлекает объект, который может выполнять итерацию отдельных знаков данной строки.
 GetHashCode	Возвращает хэш-код для этой строки. (Переопределяет Object.GetHashCode().)
 GetType	Возвращает объект Type для текущего экземпляра. (Унаследовано от Object.)
 GetTypeCode	Возвращает TypeCode для класса String.
 IndexOf(Char)	Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке.
 IndexOf(String)	Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре.
 IndexOf(Char, Int32)	Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке. Поиск начинается с указанной позиции знака.
 IndexOf(String, Int32)	Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре. Поиск начинается с указанной позиции знака.
 IndexOf(String, StringComparison)	Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте String. Параметр определяет тип поиска заданной строки.
 IndexOf(Char, Int32, Int32)	Возвращает индекс с отсчетом от нуля первого вхождения указанного символа в данном экземпляре. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.
 IndexOf(String, Int32, Int32)	Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.
 IndexOf(String, Int32, StringComparison)	Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте String. Параметры задают начальную позицию поиска в текущей строке и тип поиска.
 IndexOf(String, Int32, Int32, StringComparison)	Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте String. Параметры задают начальную позицию поиска в текущей строке, количество проверяемых знаков текущей строки и тип поиска.
 IndexOfAny(Char[])	Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.
 IndexOfAny(Char[], Int32)	Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака.
 IndexOfAny(Char[], Int32, Int32)	Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.
 Insert	Возвращает новую строку, в которой указанная строка вставляется на указанной позиции индекса в данном экземпляре.
 Intern	Извлекает системную ссылку на указанный объект String.
 IsInterned	Извлекает ссылку на указанный объект String.
 IsNormalized()	Указывает, находится ли данная строка в форме нормализации Юникода C.
 IsNormalized(NormalizationForm)	Указывает, находится ли данная строка в заданной форме нормализации Юникода.
 IsNullOrEmpty	Указывает, действительно ли указанная строка является строкой null или Empty.
 IsNullOrWhiteSpace	Указывает, является ли указанная строка значением null, пустой строкой или строкой, состоящей только из пробельных символов.
 Join(String, IEnumerable<String>)	Сцепляет элементы созданной коллекции IEnumerable<T> типа String, помещая между ними заданный разделитель.
 Join(String, Object[])	Сцепляет элементы массива объектов, помещая между ними заданный разделитель.
 Join(String, String[])	Сцепляет все элементы массива строк, помещая между ними заданный разделитель.
 Join(String, String[], Int32, Int32)	Сцепляет указанные элементы массива строк, помещая между ними заданный разделитель.
 Join<T>(String, IEnumerable<T>)	Сцепляет элементы созданной коллекции, помещая между ними заданный разделитель.
 LastIndexOf(Char)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра.
 LastIndexOf(String)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.
 LastIndexOf(Char, Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.
 LastIndexOf(String, Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.
 LastIndexOf(String, StringComparison)	Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте String. Параметр определяет тип поиска заданной строки.
 LastIndexOf(Char, Int32, Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в подстроке в пределах данного экземпляра. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.
 LastIndexOf(String, Int32, Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.
 LastIndexOf(String, Int32, StringComparison)	Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте String. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки. Параметр определяет тип сравнения для выполнения во время поиска заданной строки.
 LastIndexOf(String, Int32, Int32, StringComparison)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов. Параметр определяет тип сравнения для выполнения во время поиска заданной строки.
 LastIndexOfAny(Char[])	Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.
 LastIndexOfAny(Char[], Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.
 LastIndexOfAny(Char[], Int32, Int32)	Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.
 Normalize()	Возвращает новую строку, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в нормализованной форме C Юникода.
 Normalize(NormalizationForm)	Возвращает новую строку, текстовое значение которой совпадает с данной строкой, а двоичное представление находится в заданной нормализованной форме Юникода.
 PadLeft(Int32)	Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева пробелов до указанной общей длины.
 PadLeft(Int32, Char)	Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева пробелов или указанного знака Юникода до указанной общей длины.
 PadRight(Int32)	Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов до указанной общей длины.
 PadRight(Int32, Char)	Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов или указанного знака Юникода до указанной общей длины.
 Remove(Int32)	Возвращает новую строку, в которой были удалены все символы, начиная с указанной позиции и до конца в текущем экземпляре.
 Remove(Int32, Int32)	Возвращает новую строку, в которой было удалено указанное число символов в указанной позиции.
 Replace(Char, Char)	Возвращает новую строку, в которой все вхождения заданного знака Юникода в текущем экземпляре заменены другим заданным знаком Юникода.
 Replace(String, String)	Возвращает новую строку, в которой все вхождения заданной строки в текущем экземпляре заменены другой заданной строкой.
 Split(Char[])	Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданного массива знаков Юникода.
 Split(Char[], Int32)	Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданного массива знаков Юникода. Параметр указывает максимальное число возвращаемых подстрок.
 Split(Char[], StringSplitOptions)	Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива знаков Юникода. Параметр указывает, следует ли возвращать пустые элементы массива.
 Split(String[], StringSplitOptions)	Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива строк. Параметр указывает, следует ли возвращать пустые элементы массива.
 Split(Char[], Int32, StringSplitOptions)	Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива знаков Юникода. Параметры задают максимальное количество возвращаемых подстрок и значение, указывающее, следует ли возвращать пустые элементы массива.
 Split(String[], Int32, StringSplitOptions)	Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива строк. Параметры задают максимальное количество возвращаемых подстрок и значение, указывающее, следует ли возвращать пустые элементы массива.
 StartsWith(String)	Определяет, совпадает ли начало данного экземпляра строки с указанной строкой.
 StartsWith(String, StringComparison)	Определяет, совпадает ли начало этого экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.
 StartsWith(String, Boolean, CultureInfo)	Определяет, совпадает ли начало экземпляра строки с заданной строкой при сравнении с учетом заданного языка и региональных параметров.
 Substring(Int32)	Извлекает подстроку из данного экземпляра. Подстрока начинается в указанном положении символов и продолжается до конца строки.
 Substring(Int32, Int32)	Извлекает подстроку из данного экземпляра. Подстрока начинается с указанной позиции знака и имеет указанную длину.
 ToCharArray()	Копирует знаки данного экземпляра в массив знаков Юникода.
 ToCharArray(Int32, Int32)	Копирует знаки из указанной подстроки данного экземпляра в массив знаков Юникода.
 ToLower()	Возвращает копию данной строки, переведенную в нижний регистр.
 ToLower(CultureInfo)	Возвращает копию этой строки, переведенную в нижний регистр, используя правила определения регистра заданного языка и региональных параметров.
 ToLowerInvariant	Возвращает копию этого объекта String, переведенную в нижний регистр, используя правила учета регистра инвариантного языка и региональных параметров.
 ToString()	Возвращает этот экземпляр String; реальное преобразование не осуществляется. (Переопределяет Object.ToString().)
 ToString(IFormatProvider)	Возвращает этот экземпляр String; реальное преобразование не осуществляется.
 ToUpper()	Возвращает копию этой строки, переведенную в верхний регистр.
 ToUpper(CultureInfo)	Возвращает копию этой строки, переведенную в верхний регистр, используя правила определения регистра заданного языка и региональных параметров.
 ToUpperInvariant	Возвращает копию этого объекта String, переведенную в верхний регистр, используя правила учета регистра инвариантного языка и региональных параметров.
 Trim()	Удаляет все начальные и конечные знаки пробела из текущего объекта String.
 Trim(Char[])	Удаляет все начальные и конечные вхождения набора знаков, заданного в виде массива, из текущего объекта String.
 TrimEnd	Удаляет все конечные вхождения набора знаков, заданного в виде массива, из текущего объекта String.
 TrimStart	Удаляет все начальные вхождения набора знаков, заданного в виде массива, из текущего объекта String.

		Операторы

 Equality	Определяет, равны ли значения двух указанных строк.
 Inequality	Определяет, различаются ли значения двух указанных строк.
 
Методы расширения
 
 Aggregate<Char>(Func<Char, Char, Char>)	Перегружен. Применяет к последовательности агрегатную функцию. (Определено в Enumerable.)
 Aggregate<Char, TAccumulate>(TAccumulate, Func<TAccumulate, Char, TAccumulate>)	Перегружен. Применяет к последовательности агрегатную функцию. Указанное начальное значение используется в качестве исходного значения агрегатной операции. (Определено в Enumerable.)
 Aggregate<Char, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, Char, TAccumulate>, Func<TAccumulate, TResult>)	Перегружен. Применяет к последовательности агрегатную функцию. Указанное начальное значение служит исходным значением для агрегатной операции, а указанная функция используется для выбора результирующего значения. (Определено в Enumerable.)
 All<Char>	Проверяет, все ли элементы последовательности удовлетворяют условию. (Определено в Enumerable.)
 Any<Char>()	Перегружен. Проверяет, содержит ли последовательность какие-либо элементы. (Определено в Enumerable.)
 Any<Char>(Func<Char, Boolean>)	Перегружен. Проверяет, удовлетворяет ли какой-либо элемент последовательности заданному условию. (Определено в Enumerable.)
 AsEnumerable<Char>	Возвращает входные данные, приведенные к типу IEnumerable<T>. (Определено в Enumerable.)
 AsParallel()	Перегружен. Позволяет осуществлять параллельный запрос. (Определено в ParallelEnumerable.)
 AsParallel<Char>()	Перегружен. Позволяет осуществлять параллельный запрос. (Определено в ParallelEnumerable.)
 AsQueryable()	Перегружен. Преобразовывает объект IEnumerable в IQueryable. (Определено в Queryable.)
 AsQueryable<Char>()	Перегружен. Преобразовывает универсальный объект IEnumerable<T> в универсальный объект IQueryable<T>. (Определено в Queryable.)
 Average<Char>(Func<Char, Int32>)	Перегружен. Вычисляет среднее для последовательности значений типа Int32, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Nullable<Int32>>)	Перегружен. Вычисляет среднее для последовательности значений Int32 обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Int64>)	Перегружен. Вычисляет среднее для последовательности значений типа Int64, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Nullable<Int64>>)	Перегружен. Вычисляет среднее для последовательности значений Int64 обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Single>)	Перегружен. Вычисляет среднее для последовательности значений типа Single, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Nullable<Single>>)	Перегружен. Вычисляет среднее для последовательности значений Single обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Double>)	Перегружен. Вычисляет среднее для последовательности значений типа Double, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Nullable<Double>>)	Перегружен. Вычисляет среднее для последовательности значений Double обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Decimal>)	Перегружен. Вычисляет среднее для последовательности значений типа Decimal, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Average<Char>(Func<Char, Nullable<Decimal>>)	Перегружен. Вычисляет среднее для последовательности значений Decimal обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Cast<TResult>	Приводит элементы объекта IEnumerable к заданному типу. (Определено в Enumerable.)
 Concat<Char>	Объединяет две последовательности. (Определено в Enumerable.)
 Contains<Char>(Char)	Перегружен. Определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Contains<Char>(Char, IEqualityComparer<Char>)	Перегружен. Определяет, содержит ли последовательность заданный элемент, используя указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Count<Char>()	Перегружен. Возвращает количество элементов в последовательности. (Определено в Enumerable.)
 Count<Char>(Func<Char, Boolean>)	Перегружен. Возвращает число, представляющее количество элементов последовательности, удовлетворяющих заданному условию. (Определено в Enumerable.)
 DefaultIfEmpty<Char>()	Перегружен. Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую значение параметра типа по умолчанию, если последовательность пуста. (Определено в Enumerable.)
 DefaultIfEmpty<Char>(Char)	Перегружен. Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую указанное значение, если последовательность пуста. (Определено в Enumerable.)
 Distinct<Char>()	Перегружен. Возвращает различающиеся элементы последовательности, используя для сравнения значений компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Distinct<Char>(IEqualityComparer<Char>)	Перегружен. Возвращает различающиеся элементы последовательности, используя для сравнения значений указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 ElementAt<Char>	Возвращает элемент по указанному индексу в последовательности. (Определено в Enumerable.)
 ElementAtOrDefault<Char>	Возвращает элемент по указанному индексу в последовательности или значение по умолчанию, если индекс вне допустимого диапазона. (Определено в Enumerable.)
 Except<Char>(IEnumerable<Char>)	Перегружен. Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Except<Char>(IEnumerable<Char>, IEqualityComparer<Char>)	Перегружен. Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 First<Char>()	Перегружен. Возвращает первый элемент последовательности. (Определено в Enumerable.)
 First<Char>(Func<Char, Boolean>)	Перегружен. Возвращает первый элемент последовательности, удовлетворяющий указанному условию. (Определено в Enumerable.)
 FirstOrDefault<Char>()	Перегружен. Возвращает первый элемент последовательности или значение по умолчанию, если последовательность не содержит элементов. (Определено в Enumerable.)
 FirstOrDefault<Char>(Func<Char, Boolean>)	Перегружен. Возвращает первый удовлетворяющий условию элемент последовательности или значение по умолчанию, если ни одного такого элемента не найдено. (Определено в Enumerable.)
 GroupBy<Char, TKey>(Func<Char, TKey>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа. (Определено в Enumerable.)
 GroupBy<Char, TKey>(Func<Char, TKey>, IEqualityComparer<TKey>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и сравнивает ключи с помощью указанного компаратора. (Определено в Enumerable.)
 GroupBy<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и проецирует элементы каждой группы с помощью указанной функции. (Определено в Enumerable.)
 GroupBy<Char, TKey, TResult>(Func<Char, TKey>, Func<TKey, IEnumerable<Char>, TResult>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. (Определено в Enumerable.)
 GroupBy<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>, IEqualityComparer<TKey>)	Перегружен. Группирует элементы последовательности в соответствии с функцией селектора ключа. Ключи сравниваются с помощью компаратора, элементы каждой группы проецируются с помощью указанной функции. (Определено в Enumerable.)
 GroupBy<Char, TKey, TResult>(Func<Char, TKey>, Func<TKey, IEnumerable<Char>, TResult>, IEqualityComparer<TKey>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Ключи сравниваются с использованием заданного компаратора. (Определено в Enumerable.)
 GroupBy<Char, TKey, TElement, TResult>(Func<Char, TKey>, Func<Char, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Элементы каждой группы проецируются с помощью указанной функции. (Определено в Enumerable.)
 GroupBy<Char, TKey, TElement, TResult>(Func<Char, TKey>, Func<Char, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)	Перегружен. Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа. Значения ключей сравниваются с помощью указанного компаратора, элементы каждой группы проецируются с помощью указанной функции. (Определено в Enumerable.)
 GroupJoin<Char, TInner, TKey, TResult>(IEnumerable<TInner>, Func<Char, TKey>, Func<TInner, TKey>, Func<Char, IEnumerable<TInner>, TResult>)	Перегружен. Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 GroupJoin<Char, TInner, TKey, TResult>(IEnumerable<TInner>, Func<Char, TKey>, Func<TInner, TKey>, Func<Char, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)	Перегружен. Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты. Для сравнения ключей используется указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Intersect<Char>(IEnumerable<Char>)	Перегружен. Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Intersect<Char>(IEnumerable<Char>, IEqualityComparer<Char>)	Перегружен. Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Join<Char, TInner, TKey, TResult>(IEnumerable<TInner>, Func<Char, TKey>, Func<TInner, TKey>, Func<Char, TInner, TResult>)	Перегружен. Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Join<Char, TInner, TKey, TResult>(IEnumerable<TInner>, Func<Char, TKey>, Func<TInner, TKey>, Func<Char, TInner, TResult>, IEqualityComparer<TKey>)	Перегружен. Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей. Для сравнения ключей используется указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Last<Char>()	Перегружен. Возвращает последний элемент последовательности. (Определено в Enumerable.)
 Last<Char>(Func<Char, Boolean>)	Перегружен. Возвращает последний элемент последовательности, удовлетворяющий указанному условию. (Определено в Enumerable.)
 LastOrDefault<Char>()	Перегружен. Возвращает последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов. (Определено в Enumerable.)
 LastOrDefault<Char>(Func<Char, Boolean>)	Перегружен. Возвращает последний элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено. (Определено в Enumerable.)
 LongCount<Char>()	Перегружен. Возвращает значение типа Int64, представляющее общее число элементов в последовательности. (Определено в Enumerable.)
 LongCount<Char>(Func<Char, Boolean>)	Перегружен. Возвращает значение типа Int64, представляющее число элементов последовательности, удовлетворяющих заданному условию. (Определено в Enumerable.)
 Max<Char>()	Перегружен. Возвращает максимальное значение, содержащееся в универсальной последовательности. (Определено в Enumerable.)
 Max<Char>(Func<Char, Int32>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа Int32. (Определено в Enumerable.)
 Max<Char>(Func<Char, Nullable<Int32>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение Int32 обнуляемого типа. (Определено в Enumerable.)
 Max<Char>(Func<Char, Int64>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа Int64. (Определено в Enumerable.)
 Max<Char>(Func<Char, Nullable<Int64>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение Int64 обнуляемого типа. (Определено в Enumerable.)
 Max<Char>(Func<Char, Single>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа Single. (Определено в Enumerable.)
 Max<Char>(Func<Char, Nullable<Single>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение Single обнуляемого типа. (Определено в Enumerable.)
 Max<Char>(Func<Char, Double>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа Double. (Определено в Enumerable.)
 Max<Char>(Func<Char, Nullable<Double>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение Double обнуляемого типа. (Определено в Enumerable.)
 Max<Char>(Func<Char, Decimal>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение типа Decimal. (Определено в Enumerable.)
 Max<Char>(Func<Char, Nullable<Decimal>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает максимальное значение Decimal обнуляемого типа. (Определено в Enumerable.)
 Max<Char, TResult>(Func<Char, TResult>)	Перегружен. Вызывает функцию преобразования для каждого элемента универсальной последовательности и возвращает максимальное результирующее значение. (Определено в Enumerable.)
 Min<Char>()	Перегружен. Возвращает минимальное значение, содержащееся в универсальной последовательности. (Определено в Enumerable.)
 Min<Char>(Func<Char, Int32>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа Int32. (Определено в Enumerable.)
 Min<Char>(Func<Char, Nullable<Int32>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение Int32 обнуляемого типа. (Определено в Enumerable.)
 Min<Char>(Func<Char, Int64>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа Int64. (Определено в Enumerable.)
 Min<Char>(Func<Char, Nullable<Int64>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение Int64 обнуляемого типа. (Определено в Enumerable.)
 Min<Char>(Func<Char, Single>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа Single. (Определено в Enumerable.)
 Min<Char>(Func<Char, Nullable<Single>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение Single обнуляемого типа. (Определено в Enumerable.)
 Min<Char>(Func<Char, Double>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа Double. (Определено в Enumerable.)
 Min<Char>(Func<Char, Nullable<Double>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение Double обнуляемого типа. (Определено в Enumerable.)
 Min<Char>(Func<Char, Decimal>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение типа Decimal. (Определено в Enumerable.)
 Min<Char>(Func<Char, Nullable<Decimal>>)	Перегружен. Вызывает функцию преобразования для каждого элемента последовательности и возвращает минимальное значение Decimal обнуляемого типа. (Определено в Enumerable.)
 Min<Char, TResult>(Func<Char, TResult>)	Перегружен. Вызывает функцию преобразования для каждого элемента универсальной последовательности и возвращает минимальное результирующее значение. (Определено в Enumerable.)
 OfType<TResult>	Выполняет фильтрацию элементов объекта IEnumerable по заданному типу. (Определено в Enumerable.)
 OrderBy<Char, TKey>(Func<Char, TKey>)	Перегружен. Сортирует элементы последовательности в порядке возрастания ключа. (Определено в Enumerable.)
 OrderBy<Char, TKey>(Func<Char, TKey>, IComparer<TKey>)	Перегружен. Сортирует элементы последовательности в порядке возрастания с использованием указанного компаратора. (Определено в Enumerable.)
 OrderByDescending<Char, TKey>(Func<Char, TKey>)	Перегружен. Сортирует элементы последовательности в порядке убывания ключа. (Определено в Enumerable.)
 OrderByDescending<Char, TKey>(Func<Char, TKey>, IComparer<TKey>)	Перегружен. Сортирует элементы последовательности в порядке убывания с использованием указанного компаратора. (Определено в Enumerable.)
 Reverse<Char>	Изменяет порядок элементов последовательности на противоположный. (Определено в Enumerable.)
 Select<Char, TResult>(Func<Char, TResult>)	Перегружен. Проецирует каждый элемент последовательности в новую форму. (Определено в Enumerable.)
 Select<Char, TResult>(Func<Char, Int32, TResult>)	Перегружен. Проецирует каждый элемент последовательности в новую форму, добавляя индекс элемента. (Определено в Enumerable.)
 SelectMany<Char, TResult>(Func<Char, IEnumerable<TResult>>)	Перегружен. Проецирует каждый элемент последовательности в объект IEnumerable<T> и объединяет результирующие последовательности в одну последовательность. (Определено в Enumerable.)
 SelectMany<Char, TResult>(Func<Char, Int32, IEnumerable<TResult>>)	Перегружен. Проецирует каждый элемент последовательности в объект IEnumerable<T> и объединяет результирующие последовательности в одну последовательность. Индекс каждого элемента исходной последовательности используется в проецированной форме этого элемента. (Определено в Enumerable.)
 SelectMany<Char, TCollection, TResult>(Func<Char, Int32, IEnumerable<TCollection>>, Func<Char, TCollection, TResult>)	Перегружен. Проецирует каждый элемент последовательности в объект IEnumerable<T>, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности. Индекс каждого элемента исходной последовательности используется в промежуточной проецированной форме этого элемента. (Определено в Enumerable.)
 SelectMany<Char, TCollection, TResult>(Func<Char, IEnumerable<TCollection>>, Func<Char, TCollection, TResult>)	Перегружен. Проецирует каждый элемент последовательности в объект IEnumerable<T>, объединяет результирующие последовательности в одну и вызывает функцию селектора результата для каждого элемента этой последовательности. (Определено в Enumerable.)
 SequenceEqual<Char>(IEnumerable<Char>)	Перегружен. Определяет, совпадают ли две последовательности, используя для сравнения элементов компаратор проверки на равенство по умолчанию, предназначенный для их типа. (Определено в Enumerable.)
 SequenceEqual<Char>(IEnumerable<Char>, IEqualityComparer<Char>)	Перегружен. Определяет, совпадают ли две последовательности, используя для сравнения элементов указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Single<Char>()	Перегружен. Возвращает единственный элемент последовательности и генерирует исключение, если число элементов последовательности отлично от 1. (Определено в Enumerable.)
 Single<Char>(Func<Char, Boolean>)	Перегружен. Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, и генерирует исключение, если таких элементов больше одного. (Определено в Enumerable.)
 SingleOrDefault<Char>()	Перегружен. Возвращает единственный элемент последовательности или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, генерируется исключение. (Определено в Enumerable.)
 SingleOrDefault<Char>(Func<Char, Boolean>)	Перегружен. Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, генерируется исключение. (Определено в Enumerable.)
 Skip<Char>	Пропускает заданное число элементов в последовательности и возвращает остальные элементы. (Определено в Enumerable.)
 SkipWhile<Char>(Func<Char, Boolean>)	Перегружен. Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы. (Определено в Enumerable.)
 SkipWhile<Char>(Func<Char, Int32, Boolean>)	Перегружен. Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы. Индекс элемента используется в логике функции предиката. (Определено в Enumerable.)
 Subscribe<Char>(IObserver<Char>)	Перегружен. (Определено в Observable.)
 Subscribe<Char>(IObserver<Char>, IScheduler)	Перегружен. (Определено в Observable.)
 Sum<Char>(Func<Char, Int32>)	Перегружен. Вычисляет сумму последовательности значений типа Int32, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Nullable<Int32>>)	Перегружен. Вычисляет сумму последовательности значений Int32 обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Int64>)	Перегружен. Вычисляет сумму последовательности значений типа Int64, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Nullable<Int64>>)	Перегружен. Вычисляет сумму последовательности значений Int64 обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Single>)	Перегружен. Вычисляет сумму последовательности значений типа Single, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Nullable<Single>>)	Перегружен. Вычисляет сумму последовательности значений Single обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Double>)	Перегружен. Вычисляет сумму последовательности значений типа Double, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Nullable<Double>>)	Перегружен. Вычисляет сумму последовательности значений Double обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Decimal>)	Перегружен. Вычисляет сумму последовательности значений типа Decimal, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Sum<Char>(Func<Char, Nullable<Decimal>>)	Перегружен. Вычисляет сумму последовательности значений Decimal обнуляемого типа, получаемой в результате применения функции преобразования к каждому элементу входной последовательности. (Определено в Enumerable.)
 Take<Char>	Возвращает указанное число подряд идущих элементов с начала последовательности. (Определено в Enumerable.)
 TakeWhile<Char>(Func<Char, Boolean>)	Перегружен. Возвращает цепочку элементов последовательности, до тех пор, пока условие истинно. (Определено в Enumerable.)
 TakeWhile<Char>(Func<Char, Int32, Boolean>)	Перегружен. Возвращает цепочку элементов последовательности, до тех пор, пока условие истинно. Индекс элемента используется в логике функции предиката. (Определено в Enumerable.)
 ToArray<Char>	Создает массив из объекта IEnumerable<T>. (Определено в Enumerable.)
 ToDictionary<Char, TKey>(Func<Char, TKey>)	Перегружен. Создает словарь Dictionary<TKey, TValue> из объекта IEnumerable<T> в соответствии с заданной функцией селектора ключа. (Определено в Enumerable.)
 ToDictionary<Char, TKey>(Func<Char, TKey>, IEqualityComparer<TKey>)	Перегружен. Создает словарь Dictionary<TKey, TValue> из объекта IEnumerable<T> в соответствии с заданной функцией селектора ключа и компаратором ключей. (Определено в Enumerable.)
 ToDictionary<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>)	Перегружен. Создает словарь Dictionary<TKey, TValue> из объекта IEnumerable<T> в соответствии с заданными функциями селектора ключа и селектора элемента. (Определено в Enumerable.)
 ToDictionary<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>, IEqualityComparer<TKey>)	Перегружен. Создает словарь Dictionary<TKey, TValue> из объекта IEnumerable<T> в соответствии с заданным компаратором и функциями селектора ключа и селектора элемента. (Определено в Enumerable.)
 ToList<Char>	Создает список List<T> из объекта IEnumerable<T>. (Определено в Enumerable.)
 ToLookup<Char, TKey>(Func<Char, TKey>)	Перегружен. Создает объект Lookup<TKey, TElement> из коллекции IEnumerable<T> в соответствии с заданной функцией выбора ключа. (Определено в Enumerable.)
 ToLookup<Char, TKey>(Func<Char, TKey>, IEqualityComparer<TKey>)	Перегружен. Создает объект Lookup<TKey, TElement> из объекта IEnumerable<T> в соответствии с заданной функцией селектора ключа и компаратором ключей. (Определено в Enumerable.)
 ToLookup<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>)	Перегружен. Создает объект Lookup<TKey, TElement> из объекта IEnumerable<T> в соответствии с заданными функциями селектора ключа и селектора элемента. (Определено в Enumerable.)
 ToLookup<Char, TKey, TElement>(Func<Char, TKey>, Func<Char, TElement>, IEqualityComparer<TKey>)	Перегружен. Создает объект Lookup<TKey, TElement> из объекта IEnumerable<T> в соответствии с заданным компаратором и функциями селектора ключа и селектора элемента. (Определено в Enumerable.)
 ToObservable<Char>()	Перегружен. (Определено в Observable.)
 ToObservable<Char>(IScheduler)	Перегружен. (Определено в Observable.)
 Union<Char>(IEnumerable<Char>)	Перегружен. Находит объединение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию. (Определено в Enumerable.)
 Union<Char>(IEnumerable<Char>, IEqualityComparer<Char>)	Перегружен. Находит объединение множеств, представленных двумя последовательностями, используя указанный компаратор IEqualityComparer<T>. (Определено в Enumerable.)
 Where<Char>(Func<Char, Boolean>)	Перегружен. Выполняет фильтрацию последовательности значений на основе заданного предиката. (Определено в Enumerable.)
 Where<Char>(Func<Char, Int32, Boolean>)	Перегружен. Выполняет фильтрацию последовательности значений на основе заданного предиката. Индекс каждого элемента используется в логике функции предиката. (Определено в Enumerable.)
 Zip<Char, TSecond, TResult>	Применяет указанную функцию к соответствующим элементам двух последовательностей, что дает последовательность результатов. (Определено в Enumerable.)